// Mocks generated by Mockito 5.4.5 from annotations
// in booqs_mobile/test/widget/home_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:booqs_mobile/utils/remote_config_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RemoteConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteConfigService extends _i1.Mock
    implements _i2.RemoteConfigService {
  MockRemoteConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initRemoteConfig() => (super.noSuchMethod(
        Invocation.method(
          #initRemoteConfig,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  bool isMaintenanceMode() => (super.noSuchMethod(
        Invocation.method(
          #isMaintenanceMode,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  String minAppVersion() => (super.noSuchMethod(
        Invocation.method(
          #minAppVersion,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #minAppVersion,
            [],
          ),
        ),
      ) as String);
}
