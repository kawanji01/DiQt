name: booqs_mobile
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html

version: 1.4.66+263

environment:
  sdk: ">=2.17.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
# メモ：
# Packageをアップデートした後、エミュレーターを実行しようとした際に
# Error: CocoaPods's specs repository is too out-of-date to satisfy dependencies
# が表示されるようなら、ref: https://stackoverflow.com/questions/64443888/flutter-cocoapodss-specs-repository-is-too-out-of-date-to-satisfy-dependencies
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5
  http: ^1.1.0 # APIへのリクエスト
  google_fonts: ^6.2.1  # フォント  / mac appで読み込めない問題を解決する
  flutter_secure_storage: ^9.2.2 # セキュアなローカルストレージ（取得は非同期）
  shared_preferences: ^2.1.2 # 同期的に取得できる平文のローカルストレージ
  url_launcher: ^6.2.6 # ブラウザを開く
  badges: ^3.1.1 # バッジの表示
  firebase_core: ^3.9.0 # Push通知の実装に利用。参考：https://zuma-lab.com/posts/flutter-fcm-push-notify-development
  firebase_messaging: ^15.1.6  # Push通知の実装に利用する。参考： https://firebase.flutter.dev/docs/messaging/overview/#installation
  flutter_local_notifications: ^18.0.1 # AndroidでフォアグラウンドでPush通知を送れるようにする。参照：https://github.com/FirebaseExtended/flutterfire/blob/master/packages/firebase_messaging/firebase_messaging/example/pubspec.yaml / https://zenn.dev/rafekun/articles/ef8a22f9fe90bd
  device_info_plus: ^11.2.0 # デバイスのユニークIDやデバイスの名前、OSを取得する。
  share_plus: ^10.1.3 # 連続解答記録のシェアなど
  firebase_analytics: ^11.4.4 # Google analytics
  firebase_remote_config: ^5.0.0 # メンテナンスモードなどを管理する remote config
  firebase_crashlytics: ^4.0.0 # クラッシュレポート
  flutter_tts: ^4.2.1 # 読み上げ （保留）
  flutter_dotenv: ^5.1.0 # 環境変数の管理
  sign_in_with_apple: ^6.1.0 # Apple認証 (５に挙げるとAndroidのビルドが通らなくなる)
  google_sign_in: ^6.1.4 # Google認証
  flutter_easyloading: ^3.0.5 # 画面全体にローディングを表示する
  in_app_review: ^2.0.6 # アプリ内でレビューできるようにする。ref: https://pub.dev/packages/in_app_review
  flutter_typeahead: ^5.2.0 # 検索時のautocomplete
  percent_indicator: ^4.2.3 # 経験値のインジケーター
  eval_ex: ^1.1.7 # レベル実装のために、log10（ 10 を底とした対数を返すメソッド）が必要なため。
  purchases_flutter: ^8.7.1 # 課金実装
  google_mobile_ads: ^5.2.0 # 広告
  app_tracking_transparency: ^2.0.4 # iOSで広告表示のためにユーザー情報(IDFA（Identifier for Advertiser）)を収集するためのダイアログを表示する
  flutter_riverpod: ^2.3.6 # 状態管理
  flash: ^3.0.5+1 # 問題解答時のフィードバックなどに使うトースト
  awesome_dialog: ^3.2.1 # アニメーションするダイアログ
  confetti: ^0.8.0 # 紙吹雪
  audioplayers: ^6.1.0 # 音声の再生
  infinite_scroll_pagination: ^4.0.0 # 無限スクロール
  visibility_detector: ^0.4.0+2 # 無限スクロールで、次のアイテムを読み込むためにページの下端への到達を検知する
  timeago: ^3.4.0 # ~分前などのタイムスタンプを実装する
  path: ^1.8.3 # Achievementの獲得時の画像で。cloudinaryの画像合成を利用するためにimageのURLからファイル名を取得するために利用。
  cached_network_image: ^3.2.3 # ネットワーク経由で画像を表示し、画像をキャッシュディレクトリに保持する。
  responsive_builder: ^0.7.0 # 画面幅に合わせたレスポンシブデザイン
  font_awesome_flutter: ^10.5.0 # font awesome
  flutter_markdown: ^0.7.4+3 # マークダウン記法の実装
  markdown: ^7.1.0 # flutter_markdownが依存しているパッケージ
  dotted_border: ^2.0.0+3 # DiQt markdownの embedded_sentence で利用
  intl: ^0.19.0 # 日付などの多言語化。DateTimeFormatterなどで利用
  cell_calendar: ^0.8.0 # カレンダー
  slang: ^4.4.1 # 多言語化
  slang_flutter: ^4.0.0 # 多言語化
  flutter_app_badge_control: ^0.0.2 # 端末のホーム画面のアプリのアイコンにバッジを表示する。
  mockito: ^5.4.2 # 自動テストのMockライブラリ
  upgrader: ^11.3.1 # 強制アップデート
  image_picker: ^1.0.0 # 画像のアップロード
  image_cropper: ^9.1.0  # 画像のトリミング
  photo_view: ^0.15.0 # 画像の拡大表示
  # uni_links: ^0.5.1 # DeepLinksの実装 # 画面がフリーズする問題がiOSでもAndroidでも発生するので、一旦コメントアウト。詳しくは #609の issueを参照
  diff_match_patch: ^0.4.1 # diffを取得する
  speech_to_text: ^7.0.0 # 音声認識
  html: ^0.15.4
  path_provider: ^2.1.2 # 一時ファイルの保存 / ssmlの再生に利用
dependency_overrides:
  macos_ui:
    git:
      url: https://github.com/Mayb3Nots/macos_ui.git
      ref: dev


  

dev_dependencies:
  flutter_test:
    sdk: flutter
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  flutter_launcher_icons: ^0.14.2 # アイコンの設定。参照：https://zenn.dev/dala/books/flutter-basic-app/viewer/appinfo
  build_runner: ^2.3.3 # slangのlocaleファイルや、テストのmockクラスを生成するのに利用する
  slang_build_runner: ^4.0.0 # slang用
flutter_icons:
  android: true
  ios: true
  image_path: "assets/icon/diqt_icon.png"
  adaptive_icon_background: '#0D0D0D'
  adaptive_icon_foreground: "assets/icon/diqt_icon.png"


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  # generate: true #自動生成フラグの有効化 ref: https://qiita.com/kazutxt/items/936ebe7a21ede7e1ab20

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
   - assets/images/
   - assets/sounds/
   - .env
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
